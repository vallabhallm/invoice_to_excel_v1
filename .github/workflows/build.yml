name: Build Distributions

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr
    
    - name: Install dependencies
      run: |
        poetry install --no-interaction
    
    - name: Run tests
      run: |
        poetry run pytest tests/test_models.py tests/test_extractors.py tests/test_basic.py --cov=src/invoice_processor --cov-report=xml
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml

  build-macos:
    needs: test
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'poetry'
    
    - name: Install system dependencies
      run: |
        brew install create-dmg imagemagick tesseract
    
    - name: Install Python dependencies
      run: |
        poetry install --no-interaction
    
    - name: Build macOS DMG
      run: |
        cd cd
        chmod +x scripts/*.sh
        ./scripts/build_macos.sh
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-dmg
        path: cd/dist/*.dmg
        retention-days: 30

  build-windows:
    needs: test
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'poetry'
    
    - name: Install Python dependencies
      run: |
        poetry install --no-interaction
    
    - name: Install Windows dependencies
      run: |
        # Install ImageMagick and Tesseract on Windows
        choco install imagemagick tesseract --yes
    
    - name: Build Windows EXE
      shell: bash
      run: |
        cd cd
        chmod +x scripts/*.sh
        ./scripts/build_windows.sh
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-exe
        path: cd/dist/*windows*.exe
        retention-days: 30

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: macos-dmg
        path: ./dist/
    
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-exe
        path: ./dist/
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./dist/*.dmg
          ./dist/*windows*.exe
        body: |
          ## Invoice Processor ${{ github.ref_name }}
          
          ### ðŸ“¦ Downloads
          
          - **macOS**: Download the `.dmg` file
          - **Windows**: Download the `.exe` file
          
          ### ðŸš€ Installation
          
          #### macOS
          1. Download the DMG file
          2. Open the DMG and drag the app to Applications
          3. Run the app from Applications folder
          
          #### Windows
          1. Download the EXE file
          2. Run the installer as administrator
          3. Follow the installation wizard
          
          ### ðŸ“‹ Requirements
          
          - **macOS**: macOS 10.14+ (Mojave or later)
          - **Windows**: Windows 10/11 (64-bit)
          - **Optional**: OpenAI and/or Anthropic API keys for AI processing
          
          ### ðŸ”§ Configuration
          
          After installation, configure your API keys through the application settings or by editing the `.env` file.
          
          For detailed instructions, see the [README](https://github.com/vallabhallm/invoice_to_excel_v1/blob/main/README.md).
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}